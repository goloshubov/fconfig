---

- name: get dotfiles
  git:
    repo: "{{ files_repo }}"
    dest: "{{ files_dir }}"
    force: yes
    accept_hostkey: yes

- name: sync home files
  synchronize:
    src: "{{ files_dir }}/home/"
    dest: ~/

- name: sync etc files
  become: true
  synchronize:
    src: "{{ files_dir }}/etc/"
    dest: /etc/
    owner: no
    group: no

- name: install rpmfussion-free repos
  become: yes
  shell: dnf install -y https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm

# virtio-win repo
# sudo wget https://fedorapeople.org/groups/virt/virtio-win/virtio-win.repo   -O /etc/yum.repos.d/virtio-win.repo
# + enable latest repo

- name: install packages
  become: true
#  package:
  dnf:
    state: latest
    name: "{{ package_list }}"
- name: install minikube packages
  become: true
  dnf:
    name: https://storage.googleapis.com/minikube/releases/latest/minikube-latest.x86_64.rpm
    disable_gpg_check: yes

- name: add user to libvirt group
  become: yes
  command: usermod -a -G libvirt '{{ansible_user}}'

#needs fedora-workstation-repositories installed first
- name: enable google-chrome repo
  become: yes
  command: dnf config-manager --set-enabled google-chrome
- name: install google-chrome-stable
  become: true
  package:
    state: latest
    name:
      - google-chrome-stable


# overwrites existing flathub remote, with no filter.
- name: add flathub remote (flatpak)
  become: yes
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrep
#- name: add flathub remote (flatpak)
#  become: yes
#  flatpak_remote:
#    name: flathub
#    state: present
#    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

- name: install flatpaks
  flatpak:
    name: '{{ item }}'
    state: present
    remote: flathub
#    method: user
  loop: "{{ flatpak_list }}"

- name: Install pip packages
  pip:
    name: "{{ pip_list }}"

- name: install cargo packages
  command: cargo install '{{ item }}'
  loop: "{{ cargo_list }}"

- name: install go packages
  command: go install '{{ item }}'@latest
  loop: "{{ go_list }}"

- name: virt-what
  become: yes
  command: virt-what
  register: vm_check
- name: configure GNOME (natural-scrolling)
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    #GNOME
    - { key: "/org/gnome/desktop/peripherals/mouse/natural-scroll", value: "true" }
    - { key: "/org/gnome/desktop/peripherals/touchpad/natural-scroll", value: "true" }
  when: vm_check.stdout == ""
  #set natural-scrolling only if it's not a VM

- name: configure GNOME
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    #GNOME
#    - { key: "/org/gnome/desktop/background/picture-uri", value: "'file:///home/{{ ansible_user }}/Pictures/wallpapers/wallpaper.jpg'" }
    - { key: "/org/gnome/desktop/peripherals/touchpad/tap-to-click", value: "true" }
    - { key: "/org/gtk/Settings/FileChooser/show-hidden", value: "true" }
    - { key: "/org/gnome/nautilus/preferences/show-delete-permanently", value: "true" }
    - { key: "/org/gtk/Settings/FileChooser/sort-directories-first", value: "true" }
    - { key: "/org/gnome/nautilus/icon-view/default-zoom-level", value: "'small'" }
    - { key: "/org/gnome/desktop/interface/clock-show-weekday", value: "true" }
    - { key: "/org/gnome/desktop/interface/show-battery-percentage", value: "true" }
    #- { key: "/org/gnome/desktop/wm/preferences/focus-mode", value: "'sloppy'" }
    - { key: "/org/gnome/desktop/wm/preferences/focus-mode", value: "'click'" }
    - { key: "/org/gnome/shell/favorite-apps", value: "{{ favorite_apps }}" }
    #Tilix
    - { key: "/com/gexperts/Tilix/Settingsterminal-title-show-when-single", value: "false" }
    - { key: "/com/gexperts/Tilix/Settingsterminal-title-style", value: "'small'" }
    - { key: "/com/gexperts/Tilix/Settingstheme-variant", value: "'dark'" }
    - { key: "/com/gexperts/Tilix/Settingsuse-tabs", value: "true" }
    #TODO  set tilix color scheme
    #gedit
    - { key: "/org/gnome/gedit/preferences/editor/scheme", value: "'oblivion'" }
##- TODO apply settings / reload gnome shell (or smth)


## configure vim
#- name: create .vim directory
#  file:
#    path: ~/.vim/autoload/
#    state: directory
#- name: vim-plug
#  get_url:
#    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
#    dest: ~/.vim/autoload/plug.vim





...
