---

#-----------------------------------------.dotfiles, configs---------------------------
- name: get dotfiles
  git:
    repo: "{{ files_repo }}"
    dest: "{{ files_dir }}"
    force: yes
    accept_hostkey: yes
  tags: configs

- name: sync home files
  ignore_errors: yes
  synchronize:
    src: "{{ files_dir }}/{{ item }}/home/"
    dest: ~/
  loop:
    - "all"
    - "byHostname/{{ ansible_facts['hostname'] }}"
  tags: configs

- name: sync etc files
  ignore_errors: yes
  become: true
  synchronize:
    src: "{{ files_dir }}/{{ item }}/etc/"
    dest: /etc/
    owner: no
    group: no
  loop:
    - "all"
    - "byHostname/{{ ansible_facts['hostname'] }}"
  tags: configs


#---------------------------------packages--------------------------------------------
- name: enable copr repos
  become: true
  command: dnf copr enable '{{ item }}' -y
  loop:  "{{ copr_list }}"
  tags: package-repos

# FIXME (no ansible module for this yet)
- name: install other repos
  become: yes
  command: dnf config-manager --add-repo '{{ item }}' -y
  loop: "{{ other_repos_list }}"
  tags: package-repos

- name: install packages (direct link)
  become: true
#  package:
  dnf:
    state: latest
    name: "{{ direct_package_list }}"
  tags: [ package-repos, packages ]

- name: install prerequisite packages (repos)
  become: true
#  package:
  dnf:
    state: latest
    name: "{{ prerequisite_packages_list }}"
  tags: [ package-repos, packages ]

- name: enable repos
  become: yes
  command: dnf config-manager --set-enabled "{{ item }}"
  loop: "{{ setenabled_repo_list }}"
  tags: package-repos 

- name: install packages
  become: true
#  package:
  dnf:
    state: latest
    name: "{{ package_list }}"
  tags: packages


#---------------------------------misc--------------------------------------------
- name: add user to group
  become: yes
  command: usermod -a -G '{{ item }}'  '{{ansible_user}}'
  loop: "{{ user_groups }}"
  tags: configs


#---------------------------------flatpaks--------------------------------------------
# overwrites existing flathub remote, with no filter.
- name: add flathub remote (flatpak)
  become: yes
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrep
  tags: flatpak-repos
#- name: add flathub remote (flatpak)
#  become: yes
#  flatpak_remote:
#    name: flathub
#    state: present
#    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

- name: install flatpaks
  flatpak:
    name: '{{ item }}'
    state: present
    remote: flathub
  tags: flatpaks
#    method: user
  loop: "{{ flatpak_list }}"



#---------------------------------pypi--------------------------------------------
- name: Install pip packages
  pip:
    name: "{{ pip_list }}"
  tags: pypi



#---------------------------------cargo--------------------------------------------
- name: install cargo packages
  command: cargo install '{{ item }}'
  loop: "{{ cargo_list }}"
  tags: cargo



#---------------------------------go--------------------------------------------
- name: install go packages
  command: go install '{{ item }}'@latest
  loop: "{{ go_list }}"
  tags: go


#---------------------------------GNOME--------------------------------------------
# TODO:
#- name: virt-what
#  become: yes
#  command: virt-what
#  register: vm_check
#  tags: [ configs, gnome ]
#- name: configure GNOME (natural-scrolling)
#  dconf:
#    key: '{{ item.key }}'
#    value: '{{ item.value }}'
#  loop:
#    #GNOME
#    - { key: "/org/gnome/desktop/peripherals/mouse/natural-scroll", value: "true" }
#    - { key: "/org/gnome/desktop/peripherals/touchpad/natural-scroll", value: "true" }
#  when: vm_check.stdout == ""
#  tags: [ configs, gnome ]
#  #set natural-scrolling only if it's not a VM

- name: configure GNOME
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'    
  loop: "{{ lookup('ansible.builtin.dict', dconf_settings) }}"
  tags: [ configs, gnome ]

...
