---

# Files and Templates
# host/<hostname>/home/ dir
- name: Create directories. host (home dir)
  ansible.builtin.file:
    path: ~/{{ item.path }}
    state: directory
    #mode: '{{ item.mode }}'
  with_community.general.filetree: "{{ item.localpath }}/host/{{ inventory_hostname }}/home/"
  when: item.state == 'directory'

- name: Insttiate j2 templates. host (home dir)
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: ~/{{ item.path | splitext | first }}
    #mode: '{{ item.mode }}'
  with_community.general.filetree: "{{ item.localpath }}/host/{{ inventory_hostname }}/home/"
  when: item.state == 'file' and item.path | regex_search('.j2$')

- name: Copy files. host (home dir)
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: ~/{{ item.path }}
    #mode: '{{ item.mode }}'
  with_community.general.filetree: "{{ item.localpath }}/host/{{ inventory_hostname }}/home/"
  when: item.state == 'file' and not item.path | regex_search('.j2$')


# host/<hostname>/etc/ dir
- name: Create directories. host (etc dir)
  become: true
  ansible.builtin.file:
    path: /etc/{{ item.path }}
    state: directory
    #mode: '{{ item.mode }}'
  with_community.general.filetree: "{{ item.localpath }}/host/{{ inventory_hostname }}/etc/"
  when: item.state == 'directory'

- name: Instatiate j2 templates. host (etc dir)
  become: true
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: /etc/{{ item.path | splitext | first }}
    #mode: '{{ item.mode }}'
  with_community.general.filetree: "{{ item.localpath }}/host/{{ inventory_hostname }}/etc/"
  when: item.state == 'file' and item.path | regex_search('.j2$')

- name: Copy files. host (etc dir)
  become: true
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: /etc/{{ item.path }}
    #mode: '{{ item.mode }}'
  with_community.general.filetree: "{{ item.localpath }}/host/{{ inventory_hostname }}/etc/"
  when: item.state == 'file' and not item.path | regex_search('.j2$')


...
